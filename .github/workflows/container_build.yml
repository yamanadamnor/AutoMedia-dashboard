---
name: Create and publish image

on:
  push:
    branches: ["main", "develop"]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  next-build:
    runs-on: ubuntu-latest
    steps:
      - name: Setup node
        uses: actions/setup-node@v3.5.1
        with:
          node-version: lts/hydrogen
          check-latest: true

      - name: Checkout github.repository
        uses: actions/checkout@v3

      - name: Cache build
        uses: actions/cache@v3.2.2
        with:
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      - name: install dependencies
        run: npm ci \
          npm i sharp

      - name: create env.production file
        run: |
          echo "${{ secrets.ENVFILE}}" > .env

      - run: npm run build

      - name: Upload Next build # Upload the artifact
        uses: actions/upload-artifact@v3.1.1
        with:
          name: build
          path: |
            .next
            public
          retention-days: 7

  deploy-image:
    needs: next-build # Job depends on next-build(above) job
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout github.repository
        uses: actions/checkout@v3.2.0

      - name: Download next build # Download the above uploaded artifact
        uses: actions/download-artifact@v3.0.1
        with:
          name: build

      - name: Login to registry
        uses: docker/login-action@v2.1.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4.1.1
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3.2.0
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
